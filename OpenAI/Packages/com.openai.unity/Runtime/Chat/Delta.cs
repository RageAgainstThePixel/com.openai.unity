// Licensed under the MIT License. See LICENSE in the project root for license information.

using Newtonsoft.Json;
using UnityEngine.Scripting;

namespace OpenAI.Chat
{
    [Preserve]
    public sealed class Delta
    {
        [Preserve]
        [JsonConstructor]
        public Delta(
            [JsonProperty("role")] Role role,
            [JsonProperty("content")] string content,
            [JsonProperty("name")] string name,
            [JsonProperty("function_call")] Function function)
        {
            Role = role;
            Content = content;
            Name = name;
            Function = function;
        }

        /// <summary>
        /// The <see cref="Chat.Role"/> of the author of this message.
        /// </summary>
        [Preserve]
        [JsonProperty("role")]
        public Role Role { get; }

        /// <summary>
        /// The contents of the message.
        /// </summary>
        [Preserve]
        [JsonProperty("content")]
        public string Content { get; }

        /// <summary>
        /// Optional, The name of the author of this message.<br/>
        /// May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters.
        /// </summary>
        [Preserve]
        [JsonProperty("name")]
        public string Name { get; }

        /// <summary>
        /// The function that should be called, as generated by the model.
        /// </summary>
        [Preserve]
        [JsonProperty("function_call")]
        public Function Function { get; }

        public override string ToString() => Content ?? string.Empty;

        public static implicit operator string(Delta delta) => delta.ToString();
    }
}
